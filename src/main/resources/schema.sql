DROP TABLE IF EXISTS films, mpa, genres, film_genres, directors, film_directors, users, likes, friends;

CREATE TABLE IF NOT EXISTS mpa (
mpa_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
mpa_name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
film_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
name varchar(255) NOT NULL,
description varchar(200),
release_date date NOT NULL,
duration integer,
mpa_id integer REFERENCES mpa (mpa_id)
);

CREATE TABLE IF NOT EXISTS genres (
genre_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
genre_name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres (
film_id integer REFERENCES films (film_id) ON DELETE CASCADE,
genre_id integer REFERENCES genres (genre_id) ON DELETE CASCADE,
CONSTRAINT unique_pair UNIQUE (
    film_id, genre_id
    )
);

CREATE TABLE IF NOT EXISTS directors (
director_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
director_name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_directors (
film_id integer REFERENCES films (film_id) ON DELETE CASCADE,
director_id integer REFERENCES directors (director_id) ON DELETE CASCADE,
CONSTRAINT unique_pair_fd UNIQUE (
     film_id, director_id
     )
);

CREATE TABLE IF NOT EXISTS users (
 user_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
 name varchar(255),
 login varchar(255) NOT NULL,
 email varchar(255) NOT NULL,
 birthday date,
      CONSTRAINT uc_Users_email UNIQUE (
        email
    ),
    CONSTRAINT uc_Users_login UNIQUE (
        login
    )
 );

CREATE TABLE IF NOT EXISTS likes (
film_id integer REFERENCES films (film_id) ON DELETE CASCADE,
user_id integer REFERENCES users (user_id) ON DELETE CASCADE,
CONSTRAINT "likes_pk"
        PRIMARY KEY (user_id , film_id)
);

CREATE TABLE IF NOT EXISTS friends (
user_id integer REFERENCES users (user_id) ON DELETE CASCADE,
friend_user_id integer REFERENCES users (user_id) ON DELETE CASCADE,
CONSTRAINT "friends_pk"
        PRIMARY KEY (user_id, friend_user_id)
);
