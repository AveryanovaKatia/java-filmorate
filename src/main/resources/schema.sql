DROP TABLE IF EXISTS films, mpa, genres, film_genres, directors, film_directors, users, likes,
friends, reviews, review_likes;

CREATE TABLE IF NOT EXISTS mpa (
mpa_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
mpa_name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
film_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
name varchar(255) NOT NULL,
description varchar(200),
release_date date NOT NULL,
duration integer,
mpa_id integer REFERENCES mpa (mpa_id)
);

CREATE TABLE IF NOT EXISTS genres (
genre_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
genre_name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres (
film_id integer NOT NULL,
genre_id integer NOT NULL,
CONSTRAINT unique_pair UNIQUE (film_id, genre_id),
CONSTRAINT "film_genre_fk" FOREIGN KEY (film_id) REFERENCES films ON DELETE CASCADE,
CONSTRAINT "genre_film_fk" FOREIGN KEY (genre_id) REFERENCES genres ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS directors (
director_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
director_name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_directors (
film_id integer NOT NULL,
director_id integer NOT NULL,
CONSTRAINT unique_pair_fd UNIQUE (film_id, director_id),
CONSTRAINT "film_dir_fk" FOREIGN KEY (film_id) REFERENCES films ON DELETE CASCADE,
CONSTRAINT "dit_film_fk" FOREIGN KEY (director_id) REFERENCES directors ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS users (
user_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
name varchar(255),
login varchar(255) NOT NULL,
email varchar(255) NOT NULL,
birthday date,
CONSTRAINT uc_Users_email UNIQUE (email),
CONSTRAINT uc_Users_login UNIQUE (login)
);

CREATE TABLE IF NOT EXISTS likes (
film_id integer NOT NULL,
user_id integer NOT NULL,
CONSTRAINT "likes_pk" PRIMARY KEY (user_id , film_id),
CONSTRAINT "like_film_fk" FOREIGN KEY (film_id) REFERENCES films ON DELETE CASCADE,
CONSTRAINT "like_user_fk" FOREIGN KEY (user_id) REFERENCES users ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friends (
user_id integer NOT NULL,
friend_user_id integer NOT NULL,
CONSTRAINT "friends_pk" PRIMARY KEY (user_id, friend_user_id),
CONSTRAINT "user_fk" FOREIGN KEY (user_id) REFERENCES users ON DELETE CASCADE,
CONSTRAINT "friend_user_fk" FOREIGN KEY (user_id) REFERENCES users ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS reviews (
review_id integer GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
content varchar(255) NOT NULL,
is_positive boolean NOT NULL,
user_id integer NOT NULL,
film_id integer NOT NULL,
CONSTRAINT "review_user_fk" FOREIGN KEY (user_id) REFERENCES users ON DELETE CASCADE,
CONSTRAINT "review_film_fk" FOREIGN KEY (film_id) REFERENCES films ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS review_likes (
review_id integer NOT NULL,
user_id integer NOT NULL,
review_like integer NOT NULL,
CONSTRAINT "like_review_fk" FOREIGN KEY (review_id) REFERENCES reviews ON DELETE CASCADE,
CONSTRAINT "like_user_review_fk" FOREIGN KEY (user_id) REFERENCES users ON DELETE CASCADE,
CONSTRAINT "review_likes_pk" PRIMARY KEY (user_id , review_id, review_like)
);

